<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="12" hostname="LAPTOP-RAGTTIV5" failures="2" tests="25" name="EdgeTest" time="2.121" errors="0" timestamp="2025-04-09T04:54:36 IST">
  <testcase classname="tests.LoginTest" name="@BeforeTest setup" time="-1.744154674521E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @BeforeTest annotated setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @BeforeTest annotated setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
... Removed 11 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="tests.RegisterTest" name="@BeforeTest setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@AfterClass browserquit" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass browserquit -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@AfterClass browserquit" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass browserquit -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="tests.LogoutTest" name="@BeforeMethod loginBeforeTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod loginBeforeTest -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@AfterClass browserquit" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass browserquit -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@AfterClass browserquit" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass browserquit -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="tests.RegisterTest" name="@AfterMethod refreshPage" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod refreshPage -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@AfterClass browserquit" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass browserquit -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="tests.LogoutTest" name="@BeforeMethod loginBeforeTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod loginBeforeTest -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="tests.LogoutTest" name="@BeforeMethod loginBeforeTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod loginBeforeTest -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@AfterClass browserquit" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass browserquit -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="tests.LogoutTest" name="@BeforeMethod loginBeforeTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod loginBeforeTest -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="tests.LogoutTest" name="@BeforeMethod loginBeforeTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod loginBeforeTest -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@BeforeMethod launchingBrowserandLoadingURL" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchingBrowserandLoadingURL -->
  <testcase classname="tests.LogoutTest" name="@BeforeMethod loginBeforeTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod loginBeforeTest -->
  <testcase classname="utilis.Utility" name="@AfterMethod screenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod screenshot -->
  <testcase classname="base.ProjectSpecification" name="@AfterClass browserquit" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass browserquit -->
  <testcase classname="tests.SearchHotelTest" name="searchHotelTests" time="0.0">
    <skipped/>
  </testcase> <!-- searchHotelTests -->
  <testcase classname="tests.SearchHotelTest" name="searchHotelTests" time="0.0">
    <skipped/>
  </testcase> <!-- searchHotelTests -->
  <testcase classname="tests.SearchHotelTest" name="searchHotelTests" time="0.0">
    <skipped/>
  </testcase> <!-- searchHotelTests -->
  <testcase classname="tests.SearchHotelTest" name="searchHotelTests" time="0.0">
    <skipped/>
  </testcase> <!-- searchHotelTests -->
  <testcase classname="tests.SearchHotelTest" name="searchHotelTests" time="0.0">
    <skipped/>
  </testcase> <!-- searchHotelTests -->
  <testcase classname="tests.BookHotelTest" name="bookHotelTests" time="0.0">
    <skipped/>
  </testcase> <!-- bookHotelTests -->
  <testcase classname="tests.BookHotelTest" name="bookHotelTests" time="0.0">
    <skipped/>
  </testcase> <!-- bookHotelTests -->
  <testcase classname="tests.BookHotelTest" name="bookHotelTests" time="0.0">
    <skipped/>
  </testcase> <!-- bookHotelTests -->
  <testcase classname="tests.BookHotelTest" name="bookHotelTests" time="0.0">
    <skipped/>
  </testcase> <!-- bookHotelTests -->
  <testcase classname="tests.ItineraryTest" name="confirmBookingAndFetchOrderId" time="0.001">
    <skipped/>
  </testcase> <!-- confirmBookingAndFetchOrderId -->
  <testcase classname="tests.LogoutTest" name="logoutBtnVisible" time="0.0">
    <skipped/>
  </testcase> <!-- logoutBtnVisible -->
  <testcase classname="tests.LoginTest" name="tesLoginFunction" time="0.0">
    <failure type="java.lang.RuntimeException" message="java.io.IOException: org.apache.poi.openxml4j.exceptions.InvalidFormatException: Failed to parse relationships">
      <![CDATA[java.lang.RuntimeException: java.io.IOException: org.apache.poi.openxml4j.exceptions.InvalidFormatException: Failed to parse relationships
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: org.apache.poi.openxml4j.exceptions.InvalidFormatException: Failed to parse relationships
at org.apache.poi.ooxml.POIXMLDocument.openPackage(POIXMLDocument.java:90)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:356)
at utilis.Utility.getDataExcel(Utility.java:57)
at tests.LoginTest.LoginData(LoginTest.java:35)
... 19 more
Caused by: org.apache.poi.openxml4j.exceptions.InvalidFormatException: Failed to parse relationships
at org.apache.poi.openxml4j.opc.PackageRelationshipCollection.parseRelationshipsPart(PackageRelationshipCollection.java:363)
at org.apache.poi.openxml4j.opc.PackageRelationshipCollection.<init>(PackageRelationshipCollection.java:155)
at org.apache.poi.openxml4j.opc.PackageRelationshipCollection.<init>(PackageRelationshipCollection.java:125)
at org.apache.poi.openxml4j.opc.PackagePart.loadRelationships(PackagePart.java:565)
at org.apache.poi.openxml4j.opc.OPCPackage.getParts(OPCPackage.java:783)
at org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:251)
at org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:178)
at org.apache.poi.ooxml.POIXMLDocument.openPackage(POIXMLDocument.java:88)
... 29 more
Caused by: java.io.EOFException: Unexpected end of ZLIB input stream
at java.base/java.util.zip.InflaterInputStream.fill(InflaterInputStream.java:244)
at org.apache.commons.compress.archivers.zip.InflaterInputStreamWithStatistics.fill(InflaterInputStreamWithStatistics.java:51)
at java.base/java.util.zip.InflaterInputStream.read(InflaterInputStream.java:158)
at org.apache.commons.compress.archivers.zip.InflaterInputStreamWithStatistics.read(InflaterInputStreamWithStatistics.java:76)
at java.base/java.util.zip.InflaterInputStream.read(InflaterInputStream.java:122)
at org.apache.commons.compress.archivers.zip.InflaterInputStreamWithStatistics.read(InflaterInputStreamWithStatistics.java:67)
at java.base/java.io.FilterInputStream.read(FilterInputStream.java:82)
at org.apache.poi.openxml4j.util.ZipArchiveThresholdInputStream.read(ZipArchiveThresholdInputStream.java:69)
at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityManager$RewindableInputStream.readAndBuffer(XMLEntityManager.java:3025)
at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:705)
at java.xml/com.sun.org.apache.xerces.internal.impl.XMLVersionDetector.determineDocVersion(XMLVersionDetector.java:150)
at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:861)
at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825)
at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247)
at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342)
at java.xml/javax.xml.parsers.DocumentBuilder.parse(DocumentBuilder.java:122)
at org.apache.poi.ooxml.util.DocumentHelper.readDocument(DocumentHelper.java:57)
at org.apache.poi.openxml4j.opc.PackageRelationshipCollection.parseRelationshipsPart(PackageRelationshipCollection.java:310)
... 36 more
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- tesLoginFunction -->
  <testcase classname="tests.RegisterTest" name="testRegistration" time="0.0">
    <failure type="org.testng.TestNGException" message="
Method public void tests.RegisterTest.testRegistration(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) requires a @DataProvider named : RegisterData">
      <![CDATA[org.testng.TestNGException: 
Method public void tests.RegisterTest.testRegistration(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) requires a @DataProvider named : RegisterData
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- testRegistration -->
  <testcase classname="tests.SelectHotelTest" name="testSelectHotelAndContinue" time="0.0">
    <skipped/>
  </testcase> <!-- testSelectHotelAndContinue -->
  <testcase classname="tests.ItineraryTest" name="accessMyItinerary" time="0.0">
    <skipped/>
  </testcase> <!-- accessMyItinerary -->
  <testcase classname="tests.SelectHotelTest" name="testContinueWithoutSelection" time="0.0">
    <skipped/>
  </testcase> <!-- testContinueWithoutSelection -->
  <testcase classname="tests.RegisterTest" name="testResetFunctionality" time="0.001">
    <skipped/>
  </testcase> <!-- testResetFunctionality -->
  <testcase classname="tests.LogoutTest" name="validLogout" time="0.0">
    <skipped/>
  </testcase> <!-- validLogout -->
  <testcase classname="tests.ItineraryTest" name="searchOrderId" time="0.0">
    <skipped/>
  </testcase> <!-- searchOrderId -->
  <testcase classname="tests.ItineraryTest" name="cancelBooking" time="0.0">
    <skipped/>
  </testcase> <!-- cancelBooking -->
  <testcase classname="tests.LogoutTest" name="testDirectLogoutWithoutLogin" time="0.0">
    <skipped/>
  </testcase> <!-- testDirectLogoutWithoutLogin -->
  <testcase classname="tests.ItineraryTest" name="cancelAlreadyCanceledBooking" time="0.0">
    <skipped/>
  </testcase> <!-- cancelAlreadyCanceledBooking -->
  <testcase classname="tests.LogoutTest" name="refreshAfterLogout" time="0.0">
    <skipped/>
  </testcase> <!-- refreshAfterLogout -->
  <testcase classname="tests.LogoutTest" name="testLogoutInMultipleTabs" time="0.0">
    <skipped/>
  </testcase> <!-- testLogoutInMultipleTabs -->
  <testcase classname="tests.LogoutTest" name="testLogoutWithInvalidSession" time="0.0">
    <skipped/>
  </testcase> <!-- testLogoutWithInvalidSession -->
  <testcase classname="base.ProjectSpecification" name="@BeforeSuite setupReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setupReport -->
  <testcase classname="base.ProjectSpecification" name="@BeforeSuite setupReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setupReport -->
  <testcase classname="base.ProjectSpecification" name="@AfterSuite reportClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite reportClose -->
  <testcase classname="base.ProjectSpecification" name="@BeforeSuite setupReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setupReport -->
  <testcase classname="base.ProjectSpecification" name="@BeforeSuite setupReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setupReport -->
  <testcase classname="base.ProjectSpecification" name="@AfterSuite reportClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite reportClose -->
  <testcase classname="base.ProjectSpecification" name="@BeforeSuite setupReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setupReport -->
  <testcase classname="base.ProjectSpecification" name="@AfterSuite reportClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite reportClose -->
  <testcase classname="base.ProjectSpecification" name="@BeforeSuite setupReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setupReport -->
  <testcase classname="base.ProjectSpecification" name="@AfterSuite reportClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite reportClose -->
  <testcase classname="base.ProjectSpecification" name="@AfterSuite reportClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite reportClose -->
  <testcase classname="base.ProjectSpecification" name="@AfterSuite reportClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite reportClose -->
</testsuite> <!-- EdgeTest -->
